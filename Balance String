class Solution {
  public:
  
  int sumOfDigits(int n){
      int ans=0;
      while(n>0){
          int rem=n%10;
          ans+=rem;
          n/=10;
      }
      return ans;
  }
  
    string BalancedString(int n) {
        // code here
        string ans="";
        int temp=n;
        while(n>26){
           for(int i=0; i<26; i++){
                char ch=char(97+i);
                ans+=ch;
            }
            n=n-26;
        }
        if(n&1){
            int size=sumOfDigits(temp);
            if(size&1){
                int first=(n-1)/2;
                int second=(n+1)/2;
                for(int i=0; i<first; i++){
                    char ch=char(97+i);
                    ans+=ch;
                }
                int size=26-second;
                for(int i=size; i<26; i++){
                    char ch=char(97+i);
                    ans+=ch;
                }
            }
            else{
                int first=(n+1)/2;
                int second=(n-1)/2;
                for(int i=0; i<first; i++){
                    char ch=char(97+i);
                    ans+=ch;
                }
                int size=26-second;
                for(int i=size; i<26; i++){
                    char ch=char(97+i);
                    ans+=ch;
                }
                }
            }
        else{
           int size=n/2;
           for(int i=0; i<size; i++){
               char ch=char(97+i);
               ans+=ch;
           }
           int temp=26-size;
           for(int i=temp; i<26; i++){
               char ch=char(97+i);
               ans+=ch;
           }
        }
        return ans;
    }
};
