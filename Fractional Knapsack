class Solution
{
    public:
    //Function to get the maximum total value in the knapsack.
    double fractionalKnapsack(int W, Item arr[], int n)
    {
        vector<pair<double,int>>profit;
        for(int i=0;i<n;i++){
            double proW=(arr[i].value*1.0/arr[i].weight*1.0);
            profit.push_back({proW,i});
        }
        sort(profit.begin(),profit.end(),greater<>());//decreasing order
        double ans=0.0;
        int s=0;
        for(auto it:profit){
            if(s+arr[it.second].weight<W){
                ans+=arr[it.second].value;
                s+=arr[it.second].weight;
            }
            else{
                double x=(W-s)*1.0;
                ans+=(x*it.first);
                break;
            }
        }
        return ans;
    }
};
